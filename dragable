import React, { useCallback, useLayoutEffect, useState } from 'react';
import { SafeAreaViewBase } from 'react-native';
import { Text, View, StyleSheet, TouchableOpacity } from 'react-native';
import DraggableFlatList, {
    ScaleDecorator,
    RenderItemParams,
    NestableScrollContainer,
} from 'react-native-draggable-flatlist';
import { GestureHandlerRootView } from 'react-native-gesture-handler';

import SplashScreen from 'react-native-splash-screen';

import { SafeAreaView } from 'react-native';

const NUM_ITEMS = 100;

const getColor = (i, numItems = 25) => {
    const multiplier = 255 / (numItems - 1);
    const colorVal = i * multiplier;
    return `rgb(${colorVal}, ${Math.abs(128 - colorVal)}, ${255 - colorVal})`;
};

const mapIndexToData = (_d, index, arr) => {
    const backgroundColor = getColor(index, arr.length);
    return {
        text: `${index}`,
        key: `key-${index}`,
        backgroundColor,
        height: 75,
    };
};

const initialData = [...Array(NUM_ITEMS)].map(mapIndexToData);

export default function Horizontal() {
    const [data, setData] = useState(initialData);

    useLayoutEffect(() => {
        SplashScreen.hide();
    }, []);

    const renderItem = useCallback(({ item, drag, isActive }) => {
        return (
            <ScaleDecorator>
                <TouchableOpacity
                    activeOpacity={1}
                    onLongPress={drag}
                    disabled={isActive}
                    style={[
                        styles.rowItem,
                        { opacity: isActive ? 0.5 : 1 },
                        { backgroundColor: isActive ? 'blue' : item.backgroundColor },
                    ]}
                >
                    <Text style={styles.text}>{item.text}</Text>
                </TouchableOpacity>
            </ScaleDecorator>
        );
    }, []);

    return (
        <SafeAreaView style={{ flex: 1 }}>
            <GestureHandlerRootView style={{ flex: 1 }}>
                <NestableScrollContainer>
                    <DraggableFlatList
                        horizontal
                        data={data}
                        onDragEnd={({ data }) => setData(data)}
                        keyExtractor={(item) => {
                            return item.key;
                        }}
                        renderItem={renderItem}
                        renderPlaceholder={() => <View style={{ flex: 1, backgroundColor: 'tomato' }} />}
                    />
                </NestableScrollContainer>
            </GestureHandlerRootView>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    rowItem: {
        height: 100,
        width: 100,
        alignItems: 'center',
        justifyContent: 'center',
    },
    text: {
        color: 'white',
        fontSize: 24,
        fontWeight: 'bold',
        textAlign: 'center',
    },
});
